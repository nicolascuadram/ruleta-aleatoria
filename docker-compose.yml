services:
  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "10001:10001"
    networks:
      - backend_net
    depends_on:
      - backend
    restart: unless-stopped

  backend:
    build: ./backend
    container_name: backend
    ports:
      - "10002:10002"
    networks:
      - backend_net
    depends_on:
      - postgres
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:10002" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db:/docker-entrypoint-initdb.d/
    networks:
      - backend_net
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  postgres_data:

networks:
  backend_net:
    driver: bridge
